
atmega328p.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000ad2  00000b66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ad2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  0080010a  0080010a  00000b70  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ba0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001316  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9e  00000000  00000000  00002016  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000959  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00003410  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000052a  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a6a  00000000  00000000  00003bfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00004664  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__vector_18>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__vector_21>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__stack+0xc3>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0xb2>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <lcd_i2c_init+0xe>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <__vector_21+0x2e>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e2 ed       	ldi	r30, 0xD2	; 210
 176:	fa e0       	ldi	r31, 0x0A	; 10
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	aa 30       	cpi	r26, 0x0A	; 10
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	aa e0       	ldi	r26, 0x0A	; 10
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	ab 30       	cpi	r26, 0x0B	; 11
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 49 02 	call	0x492	; 0x492 <main>
 198:	0c 94 67 05 	jmp	0xace	; 0xace <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <__vector_21>:
* USO DEL ADC CON INTERRUPCIONES
************************************************************************/

/***Rutina de atención a las interrupciones del convertidor***/
ISR (ADC_vect)
{
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	2f 93       	push	r18
 1b0:	3f 93       	push	r19
 1b2:	4f 93       	push	r20
 1b4:	5f 93       	push	r21
 1b6:	6f 93       	push	r22
 1b8:	7f 93       	push	r23
 1ba:	8f 93       	push	r24
 1bc:	9f 93       	push	r25
 1be:	af 93       	push	r26
 1c0:	bf 93       	push	r27
 1c2:	ef 93       	push	r30
 1c4:	ff 93       	push	r31
 1c6:	cf 93       	push	r28
 1c8:	df 93       	push	r29
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
 1ce:	2a 97       	sbiw	r28, 0x0a	; 10
 1d0:	de bf       	out	0x3e, r29	; 62
 1d2:	cd bf       	out	0x3d, r28	; 61
	uint8_t LowPart = ADCL;	//10-bit resolution
 1d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
	uint16_t TenBitResult = ADCH << 2 | LowPart >> 6; //10-bit resolution
 1d8:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	22 0f       	add	r18, r18
 1e0:	33 1f       	adc	r19, r19
 1e2:	22 0f       	add	r18, r18
 1e4:	33 1f       	adc	r19, r19
 1e6:	82 95       	swap	r24
 1e8:	86 95       	lsr	r24
 1ea:	86 95       	lsr	r24
 1ec:	83 70       	andi	r24, 0x03	; 3
 1ee:	28 2b       	or	r18, r24
	
	/***Ejemplo de termómetro digital para salida en LCD***/
	char ascii_temp [10];
	float temp = (TenBitResult*150/307);//Conversión a grados C
 1f0:	46 e9       	ldi	r20, 0x96	; 150
 1f2:	42 9f       	mul	r20, r18
 1f4:	c0 01       	movw	r24, r0
 1f6:	43 9f       	mul	r20, r19
 1f8:	90 0d       	add	r25, r0
 1fa:	11 24       	eor	r1, r1
 1fc:	63 e3       	ldi	r22, 0x33	; 51
 1fe:	71 e0       	ldi	r23, 0x01	; 1
 200:	0e 94 ca 02 	call	0x594	; 0x594 <__udivmodhi4>
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 8d 02 	call	0x51a	; 0x51a <__floatunsisf>
	//El LM35 entrega 1.5v cuando mide 150 grados
	//Por lo tanto: 5v   -> 1023
	//				1.5v -> x
	// x=((1.5v)*(1023))/5v=306.9
	dtostrf(temp, 4, 1, ascii_temp);	//4 es la cantidad de enteros,
 20c:	8e 01       	movw	r16, r28
 20e:	0f 5f       	subi	r16, 0xFF	; 255
 210:	1f 4f       	sbci	r17, 0xFF	; 255
 212:	21 e0       	ldi	r18, 0x01	; 1
 214:	44 e0       	ldi	r20, 0x04	; 4
 216:	0e 94 de 02 	call	0x5bc	; 0x5bc <dtostrf>
										//1 es la cantidad de decimales										
	// Despliega los valores de las muestras del ADC al LCD
	lcd_i2c_col_row(9,1);
 21a:	61 e0       	ldi	r22, 0x01	; 1
 21c:	89 e0       	ldi	r24, 0x09	; 9
 21e:	0e 94 29 02 	call	0x452	; 0x452 <lcd_i2c_col_row>
	lcd_i2c_write_string(ascii_temp);
 222:	c8 01       	movw	r24, r16
 224:	0e 94 33 02 	call	0x466	; 0x466 <lcd_i2c_write_string>
	lcd_i2c_data(0xDF); //Caracter para indicar grados
 228:	8f ed       	ldi	r24, 0xDF	; 223
 22a:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <lcd_i2c_data>
	lcd_i2c_write_string("C");
 22e:	82 e0       	ldi	r24, 0x02	; 2
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	0e 94 33 02 	call	0x466	; 0x466 <lcd_i2c_write_string>
	//Comenzar otra conversion
	ADCSRA |= 1<<ADSC;
 236:	ea e7       	ldi	r30, 0x7A	; 122
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	80 81       	ld	r24, Z
 23c:	80 64       	ori	r24, 0x40	; 64
 23e:	80 83       	st	Z, r24
}
 240:	2a 96       	adiw	r28, 0x0a	; 10
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	de bf       	out	0x3e, r29	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	cd bf       	out	0x3d, r28	; 61
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	ff 91       	pop	r31
 252:	ef 91       	pop	r30
 254:	bf 91       	pop	r27
 256:	af 91       	pop	r26
 258:	9f 91       	pop	r25
 25a:	8f 91       	pop	r24
 25c:	7f 91       	pop	r23
 25e:	6f 91       	pop	r22
 260:	5f 91       	pop	r21
 262:	4f 91       	pop	r20
 264:	3f 91       	pop	r19
 266:	2f 91       	pop	r18
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	0f 90       	pop	r0
 26e:	0f be       	out	0x3f, r0	; 63
 270:	0f 90       	pop	r0
 272:	1f 90       	pop	r1
 274:	18 95       	reti

00000276 <ADC_WithInterrupt>:

void ADC_WithInterrupt(void)
{
	//Habilita el convertidor (encenderlo)
	ADCSRA |= 1 << ADEN;
 276:	ea e7       	ldi	r30, 0x7A	; 122
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	80 81       	ld	r24, Z
 27c:	80 68       	ori	r24, 0x80	; 128
 27e:	80 83       	st	Z, r24
			
	//Habilitar el prescaler fo=16,000,000Hz/50,000Hz=320;(tabla 76, pag.201)
	ADCSRA |= 1 << ADPS2 | 1 << ADPS1 | 1 << ADPS0;	//Factor de división = 128
 280:	80 81       	ld	r24, Z
 282:	87 60       	ori	r24, 0x07	; 7
 284:	80 83       	st	Z, r24
			
	//Resultado justificado a la izquierda (ADCH bit9-2, ADCL bit1-0)
	ADMUX |= 1 << ADLAR;
 286:	ac e7       	ldi	r26, 0x7C	; 124
 288:	b0 e0       	ldi	r27, 0x00	; 0
 28a:	8c 91       	ld	r24, X
 28c:	80 62       	ori	r24, 0x20	; 32
 28e:	8c 93       	st	X, r24
			
	//Seleccionar el voltaje de referencia REF1=0, REFS0=1
	//(AVCC with external capacitor at AREF pin)
	//Entrada AVcc= 5v y Aref= con un capacitor a GND
	//Internamente: Vref=0v a 5v
	ADMUX |= 1 << REFS0;
 290:	8c 91       	ld	r24, X
 292:	80 64       	ori	r24, 0x40	; 64
 294:	8c 93       	st	X, r24
			
	//Habiltar interrupciones del ADC
	ADCSRA |= 1 << ADIE;
 296:	80 81       	ld	r24, Z
 298:	88 60       	ori	r24, 0x08	; 8
 29a:	80 83       	st	Z, r24
			
	//Comenzar la conversión
	ADCSRA |= 1 << ADSC;
 29c:	80 81       	ld	r24, Z
 29e:	80 64       	ori	r24, 0x40	; 64
 2a0:	80 83       	st	Z, r24
 2a2:	08 95       	ret

000002a4 <init_i2c>:
#include <util/delay.h>
#include "i2c.h"

void init_i2c(void)
{
	TWSR = ((0 << TWPS1) & (0 << TWPS0)); //Prescaler = 1
 2a4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = 0X14; //Define Bit rate SCL_frec=CPU_frec/(16+2(TWBR)x4^(prescaler))
 2a8:	84 e1       	ldi	r24, 0x14	; 20
 2aa:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
				//SCL_Frec=(16000000/(16+2(20)(4)))=74Khz
	TWCR = (1<<TWEN); //Activa la interfaz TWI
 2ae:	84 e0       	ldi	r24, 0x04	; 4
 2b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2b4:	08 95       	ret

000002b6 <start>:
}

void start(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN); //Genera condición de START
 2b6:	84 ea       	ldi	r24, 0xA4	; 164
 2b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR & (1<<TWINT))==0); //Espera hasta que TWINT=0 (TWI termina su trabajo)
 2bc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2c0:	88 23       	and	r24, r24
 2c2:	e4 f7       	brge	.-8      	; 0x2bc <start+0x6>
}
 2c4:	08 95       	ret

000002c6 <stop>:

void stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO); //Genera condición de STOP
 2c6:	84 e9       	ldi	r24, 0x94	; 148
 2c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2cc:	8f e9       	ldi	r24, 0x9F	; 159
 2ce:	9f e0       	ldi	r25, 0x0F	; 15
 2d0:	01 97       	sbiw	r24, 0x01	; 1
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <stop+0xa>
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <stop+0x10>
 2d6:	00 00       	nop
 2d8:	08 95       	ret

000002da <write_i2c>:
	_delay_ms(1);
}

void write_i2c(uint8_t data)
{
	TWDR = data; //Byte a escribir
 2da:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA); //Escritura con reconocimiento (TWEA=1)
 2de:	84 ec       	ldi	r24, 0xC4	; 196
 2e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR & (1<<TWINT))==0); //Espera hasta que TWINT=0 (TWI termina su trabajo)
 2e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 2e8:	88 23       	and	r24, r24
 2ea:	e4 f7       	brge	.-8      	; 0x2e4 <write_i2c+0xa>
}
 2ec:	08 95       	ret

000002ee <lcd_i2c_reset>:
 2ee:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <start>
 2f2:	8e e4       	ldi	r24, 0x4E	; 78
 2f4:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 2f8:	8f ef       	ldi	r24, 0xFF	; 255
 2fa:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 2fe:	2f ef       	ldi	r18, 0xFF	; 255
 300:	89 ef       	ldi	r24, 0xF9	; 249
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	21 50       	subi	r18, 0x01	; 1
 306:	80 40       	sbci	r24, 0x00	; 0
 308:	90 40       	sbci	r25, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <lcd_i2c_reset+0x16>
 30c:	00 c0       	rjmp	.+0      	; 0x30e <lcd_i2c_reset+0x20>
 30e:	00 00       	nop
 310:	84 e3       	ldi	r24, 0x34	; 52
 312:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 316:	80 e3       	ldi	r24, 0x30	; 48
 318:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 31c:	8f e3       	ldi	r24, 0x3F	; 63
 31e:	9c e9       	ldi	r25, 0x9C	; 156
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <lcd_i2c_reset+0x32>
 324:	00 c0       	rjmp	.+0      	; 0x326 <lcd_i2c_reset+0x38>
 326:	00 00       	nop
 328:	84 e3       	ldi	r24, 0x34	; 52
 32a:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 32e:	80 e3       	ldi	r24, 0x30	; 48
 330:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 334:	8f e9       	ldi	r24, 0x9F	; 159
 336:	9f e0       	ldi	r25, 0x0F	; 15
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_i2c_reset+0x4a>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <lcd_i2c_reset+0x50>
 33e:	00 00       	nop
 340:	84 e3       	ldi	r24, 0x34	; 52
 342:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 346:	80 e3       	ldi	r24, 0x30	; 48
 348:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 34c:	8f e9       	ldi	r24, 0x9F	; 159
 34e:	9f e0       	ldi	r25, 0x0F	; 15
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <lcd_i2c_reset+0x62>
 354:	00 c0       	rjmp	.+0      	; 0x356 <lcd_i2c_reset+0x68>
 356:	00 00       	nop
 358:	84 e2       	ldi	r24, 0x24	; 36
 35a:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 35e:	80 e2       	ldi	r24, 0x20	; 32
 360:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 364:	8f e9       	ldi	r24, 0x9F	; 159
 366:	9f e0       	ldi	r25, 0x0F	; 15
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	f1 f7       	brne	.-4      	; 0x368 <lcd_i2c_reset+0x7a>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <lcd_i2c_reset+0x80>
 36e:	00 00       	nop
 370:	0e 94 63 01 	call	0x2c6	; 0x2c6 <stop>
 374:	08 95       	ret

00000376 <lcd_i2c_cmd>:
 376:	cf 93       	push	r28
 378:	df 93       	push	r29
 37a:	c8 2f       	mov	r28, r24
 37c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <start>
 380:	8e e4       	ldi	r24, 0x4E	; 78
 382:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 386:	dc 2f       	mov	r29, r28
 388:	d0 7f       	andi	r29, 0xF0	; 240
 38a:	8d 2f       	mov	r24, r29
 38c:	8c 60       	ori	r24, 0x0C	; 12
 38e:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 392:	8d 2f       	mov	r24, r29
 394:	88 60       	ori	r24, 0x08	; 8
 396:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 39a:	80 e1       	ldi	r24, 0x10	; 16
 39c:	c8 9f       	mul	r28, r24
 39e:	e0 01       	movw	r28, r0
 3a0:	11 24       	eor	r1, r1
 3a2:	8c 2f       	mov	r24, r28
 3a4:	8c 60       	ori	r24, 0x0C	; 12
 3a6:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 3aa:	8c 2f       	mov	r24, r28
 3ac:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 3b0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <stop>
 3b4:	8f e3       	ldi	r24, 0x3F	; 63
 3b6:	9f e1       	ldi	r25, 0x1F	; 31
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <lcd_i2c_cmd+0x42>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <lcd_i2c_cmd+0x48>
 3be:	00 00       	nop
 3c0:	8f e3       	ldi	r24, 0x3F	; 63
 3c2:	9f e1       	ldi	r25, 0x1F	; 31
 3c4:	01 97       	sbiw	r24, 0x01	; 1
 3c6:	f1 f7       	brne	.-4      	; 0x3c4 <lcd_i2c_cmd+0x4e>
 3c8:	00 c0       	rjmp	.+0      	; 0x3ca <lcd_i2c_cmd+0x54>
 3ca:	00 00       	nop
 3cc:	df 91       	pop	r29
 3ce:	cf 91       	pop	r28
 3d0:	08 95       	ret

000003d2 <lcd_i2c_init>:
 3d2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <init_i2c>
 3d6:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_i2c_reset>
 3da:	8c e2       	ldi	r24, 0x2C	; 44
 3dc:	0e 94 bb 01 	call	0x376	; 0x376 <lcd_i2c_cmd>
 3e0:	8c e0       	ldi	r24, 0x0C	; 12
 3e2:	0e 94 bb 01 	call	0x376	; 0x376 <lcd_i2c_cmd>
 3e6:	86 e0       	ldi	r24, 0x06	; 6
 3e8:	0e 94 bb 01 	call	0x376	; 0x376 <lcd_i2c_cmd>
 3ec:	80 e8       	ldi	r24, 0x80	; 128
 3ee:	0e 94 bb 01 	call	0x376	; 0x376 <lcd_i2c_cmd>
 3f2:	08 95       	ret

000003f4 <lcd_i2c_data>:
 3f4:	cf 93       	push	r28
 3f6:	df 93       	push	r29
 3f8:	c8 2f       	mov	r28, r24
 3fa:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <start>
 3fe:	8e e4       	ldi	r24, 0x4E	; 78
 400:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 404:	dc 2f       	mov	r29, r28
 406:	d0 7f       	andi	r29, 0xF0	; 240
 408:	8d 2f       	mov	r24, r29
 40a:	8d 60       	ori	r24, 0x0D	; 13
 40c:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 410:	8d 2f       	mov	r24, r29
 412:	89 60       	ori	r24, 0x09	; 9
 414:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 418:	80 e1       	ldi	r24, 0x10	; 16
 41a:	c8 9f       	mul	r28, r24
 41c:	e0 01       	movw	r28, r0
 41e:	11 24       	eor	r1, r1
 420:	8c 2f       	mov	r24, r28
 422:	8d 60       	ori	r24, 0x0D	; 13
 424:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 428:	8c 2f       	mov	r24, r28
 42a:	89 60       	ori	r24, 0x09	; 9
 42c:	0e 94 6d 01 	call	0x2da	; 0x2da <write_i2c>
 430:	0e 94 63 01 	call	0x2c6	; 0x2c6 <stop>
 434:	8f e3       	ldi	r24, 0x3F	; 63
 436:	9f e1       	ldi	r25, 0x1F	; 31
 438:	01 97       	sbiw	r24, 0x01	; 1
 43a:	f1 f7       	brne	.-4      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 43c:	00 c0       	rjmp	.+0      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43e:	00 00       	nop
 440:	8f e3       	ldi	r24, 0x3F	; 63
 442:	9f e1       	ldi	r25, 0x1F	; 31
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 448:	00 c0       	rjmp	.+0      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 44a:	00 00       	nop
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

00000452 <lcd_i2c_col_row>:
 452:	e6 2f       	mov	r30, r22
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	e1 50       	subi	r30, 0x01	; 1
 458:	ff 4f       	sbci	r31, 0xFF	; 255
 45a:	90 81       	ld	r25, Z
 45c:	89 0f       	add	r24, r25
 45e:	81 58       	subi	r24, 0x81	; 129
 460:	0e 94 bb 01 	call	0x376	; 0x376 <lcd_i2c_cmd>
 464:	08 95       	ret

00000466 <lcd_i2c_write_string>:
*	Despliega una cadena de caracteres
*	Entrada: Cadena de caracteres entre comillas (p.e. "Hola LCD..")
*	Salida: Ninguna
*********************************************************/
void lcd_i2c_write_string(char *a)
{
 466:	0f 93       	push	r16
 468:	1f 93       	push	r17
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	8c 01       	movw	r16, r24
	unsigned int i;
	for(i=0;a[i]!=0;i++)
 470:	c0 e0       	ldi	r28, 0x00	; 0
 472:	d0 e0       	ldi	r29, 0x00	; 0
 474:	03 c0       	rjmp	.+6      	; 0x47c <lcd_i2c_write_string+0x16>
	lcd_i2c_data(a[i]);
 476:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <lcd_i2c_data>
*	Salida: Ninguna
*********************************************************/
void lcd_i2c_write_string(char *a)
{
	unsigned int i;
	for(i=0;a[i]!=0;i++)
 47a:	21 96       	adiw	r28, 0x01	; 1
 47c:	f8 01       	movw	r30, r16
 47e:	ec 0f       	add	r30, r28
 480:	fd 1f       	adc	r31, r29
 482:	80 81       	ld	r24, Z
 484:	81 11       	cpse	r24, r1
 486:	f7 cf       	rjmp	.-18     	; 0x476 <lcd_i2c_write_string+0x10>
	lcd_i2c_data(a[i]);
}
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	1f 91       	pop	r17
 48e:	0f 91       	pop	r16
 490:	08 95       	ret

00000492 <main>:
#include "adc.h"

int main(void)
{
//    init_usart(16);
	ADC_WithInterrupt();
 492:	0e 94 3b 01 	call	0x276	; 0x276 <ADC_WithInterrupt>
	lcd_i2c_init();
 496:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <lcd_i2c_init>
	lcd_i2c_col_row(4,1);
 49a:	61 e0       	ldi	r22, 0x01	; 1
 49c:	84 e0       	ldi	r24, 0x04	; 4
 49e:	0e 94 29 02 	call	0x452	; 0x452 <lcd_i2c_col_row>
	lcd_i2c_write_string("TEMP:");
 4a2:	84 e0       	ldi	r24, 0x04	; 4
 4a4:	91 e0       	ldi	r25, 0x01	; 1
 4a6:	0e 94 33 02 	call	0x466	; 0x466 <lcd_i2c_write_string>
	sei(); //Interrupciones generales
 4aa:	78 94       	sei
 4ac:	ff cf       	rjmp	.-2      	; 0x4ac <main+0x1a>

000004ae <usart_transmit>:
/*
* Transmite el dato que se pasa como argumento
*/
void usart_transmit( unsigned int data )
{
  while ((UCSR0A & 0x20) == 0x00);  // Espera hasta que el buffer del transmisor está vacío (UDRE=1)
 4ae:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 4b2:	95 ff       	sbrs	r25, 5
 4b4:	fc cf       	rjmp	.-8      	; 0x4ae <usart_transmit>
  UDR0 = data; // Cuando el buffer está vacío, coloca el dato en el registro UDR
 4b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 4ba:	08 95       	ret

000004bc <__vector_18>:

/*
* Rutina de atención a las interrupciones del USART
*/
ISR (USART_RX_vect)
{
 4bc:	1f 92       	push	r1
 4be:	0f 92       	push	r0
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	0f 92       	push	r0
 4c4:	11 24       	eor	r1, r1
 4c6:	2f 93       	push	r18
 4c8:	3f 93       	push	r19
 4ca:	4f 93       	push	r20
 4cc:	5f 93       	push	r21
 4ce:	6f 93       	push	r22
 4d0:	7f 93       	push	r23
 4d2:	8f 93       	push	r24
 4d4:	9f 93       	push	r25
 4d6:	af 93       	push	r26
 4d8:	bf 93       	push	r27
 4da:	ef 93       	push	r30
 4dc:	ff 93       	push	r31
	usart_received_char=UDR0;
 4de:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 4e2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
	usart_transmit(0x40); //Transmite una "@" y luego el caracter tecleado
 4e6:	80 e4       	ldi	r24, 0x40	; 64
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 57 02 	call	0x4ae	; 0x4ae <usart_transmit>
	usart_transmit(usart_received_char);
 4ee:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 57 02 	call	0x4ae	; 0x4ae <usart_transmit>
}
 4f8:	ff 91       	pop	r31
 4fa:	ef 91       	pop	r30
 4fc:	bf 91       	pop	r27
 4fe:	af 91       	pop	r26
 500:	9f 91       	pop	r25
 502:	8f 91       	pop	r24
 504:	7f 91       	pop	r23
 506:	6f 91       	pop	r22
 508:	5f 91       	pop	r21
 50a:	4f 91       	pop	r20
 50c:	3f 91       	pop	r19
 50e:	2f 91       	pop	r18
 510:	0f 90       	pop	r0
 512:	0f be       	out	0x3f, r0	; 63
 514:	0f 90       	pop	r0
 516:	1f 90       	pop	r1
 518:	18 95       	reti

0000051a <__floatunsisf>:
 51a:	e8 94       	clt
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__floatsisf+0x12>

0000051e <__floatsisf>:
 51e:	97 fb       	bst	r25, 7
 520:	3e f4       	brtc	.+14     	; 0x530 <__floatsisf+0x12>
 522:	90 95       	com	r25
 524:	80 95       	com	r24
 526:	70 95       	com	r23
 528:	61 95       	neg	r22
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	99 23       	and	r25, r25
 532:	a9 f0       	breq	.+42     	; 0x55e <__floatsisf+0x40>
 534:	f9 2f       	mov	r31, r25
 536:	96 e9       	ldi	r25, 0x96	; 150
 538:	bb 27       	eor	r27, r27
 53a:	93 95       	inc	r25
 53c:	f6 95       	lsr	r31
 53e:	87 95       	ror	r24
 540:	77 95       	ror	r23
 542:	67 95       	ror	r22
 544:	b7 95       	ror	r27
 546:	f1 11       	cpse	r31, r1
 548:	f8 cf       	rjmp	.-16     	; 0x53a <__floatsisf+0x1c>
 54a:	fa f4       	brpl	.+62     	; 0x58a <__floatsisf+0x6c>
 54c:	bb 0f       	add	r27, r27
 54e:	11 f4       	brne	.+4      	; 0x554 <__floatsisf+0x36>
 550:	60 ff       	sbrs	r22, 0
 552:	1b c0       	rjmp	.+54     	; 0x58a <__floatsisf+0x6c>
 554:	6f 5f       	subi	r22, 0xFF	; 255
 556:	7f 4f       	sbci	r23, 0xFF	; 255
 558:	8f 4f       	sbci	r24, 0xFF	; 255
 55a:	9f 4f       	sbci	r25, 0xFF	; 255
 55c:	16 c0       	rjmp	.+44     	; 0x58a <__floatsisf+0x6c>
 55e:	88 23       	and	r24, r24
 560:	11 f0       	breq	.+4      	; 0x566 <__floatsisf+0x48>
 562:	96 e9       	ldi	r25, 0x96	; 150
 564:	11 c0       	rjmp	.+34     	; 0x588 <__floatsisf+0x6a>
 566:	77 23       	and	r23, r23
 568:	21 f0       	breq	.+8      	; 0x572 <__floatsisf+0x54>
 56a:	9e e8       	ldi	r25, 0x8E	; 142
 56c:	87 2f       	mov	r24, r23
 56e:	76 2f       	mov	r23, r22
 570:	05 c0       	rjmp	.+10     	; 0x57c <__floatsisf+0x5e>
 572:	66 23       	and	r22, r22
 574:	71 f0       	breq	.+28     	; 0x592 <__floatsisf+0x74>
 576:	96 e8       	ldi	r25, 0x86	; 134
 578:	86 2f       	mov	r24, r22
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	60 e0       	ldi	r22, 0x00	; 0
 57e:	2a f0       	brmi	.+10     	; 0x58a <__floatsisf+0x6c>
 580:	9a 95       	dec	r25
 582:	66 0f       	add	r22, r22
 584:	77 1f       	adc	r23, r23
 586:	88 1f       	adc	r24, r24
 588:	da f7       	brpl	.-10     	; 0x580 <__floatsisf+0x62>
 58a:	88 0f       	add	r24, r24
 58c:	96 95       	lsr	r25
 58e:	87 95       	ror	r24
 590:	97 f9       	bld	r25, 7
 592:	08 95       	ret

00000594 <__udivmodhi4>:
 594:	aa 1b       	sub	r26, r26
 596:	bb 1b       	sub	r27, r27
 598:	51 e1       	ldi	r21, 0x11	; 17
 59a:	07 c0       	rjmp	.+14     	; 0x5aa <__udivmodhi4_ep>

0000059c <__udivmodhi4_loop>:
 59c:	aa 1f       	adc	r26, r26
 59e:	bb 1f       	adc	r27, r27
 5a0:	a6 17       	cp	r26, r22
 5a2:	b7 07       	cpc	r27, r23
 5a4:	10 f0       	brcs	.+4      	; 0x5aa <__udivmodhi4_ep>
 5a6:	a6 1b       	sub	r26, r22
 5a8:	b7 0b       	sbc	r27, r23

000005aa <__udivmodhi4_ep>:
 5aa:	88 1f       	adc	r24, r24
 5ac:	99 1f       	adc	r25, r25
 5ae:	5a 95       	dec	r21
 5b0:	a9 f7       	brne	.-22     	; 0x59c <__udivmodhi4_loop>
 5b2:	80 95       	com	r24
 5b4:	90 95       	com	r25
 5b6:	bc 01       	movw	r22, r24
 5b8:	cd 01       	movw	r24, r26
 5ba:	08 95       	ret

000005bc <dtostrf>:
 5bc:	ef 92       	push	r14
 5be:	0f 93       	push	r16
 5c0:	1f 93       	push	r17
 5c2:	cf 93       	push	r28
 5c4:	df 93       	push	r29
 5c6:	e8 01       	movw	r28, r16
 5c8:	47 fd       	sbrc	r20, 7
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <dtostrf+0x14>
 5cc:	34 e0       	ldi	r19, 0x04	; 4
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <dtostrf+0x16>
 5d0:	34 e1       	ldi	r19, 0x14	; 20
 5d2:	04 2e       	mov	r0, r20
 5d4:	00 0c       	add	r0, r0
 5d6:	55 0b       	sbc	r21, r21
 5d8:	57 ff       	sbrs	r21, 7
 5da:	03 c0       	rjmp	.+6      	; 0x5e2 <dtostrf+0x26>
 5dc:	51 95       	neg	r21
 5de:	41 95       	neg	r20
 5e0:	51 09       	sbc	r21, r1
 5e2:	e3 2e       	mov	r14, r19
 5e4:	02 2f       	mov	r16, r18
 5e6:	24 2f       	mov	r18, r20
 5e8:	ae 01       	movw	r20, r28
 5ea:	0e 94 fe 02 	call	0x5fc	; 0x5fc <dtoa_prf>
 5ee:	ce 01       	movw	r24, r28
 5f0:	df 91       	pop	r29
 5f2:	cf 91       	pop	r28
 5f4:	1f 91       	pop	r17
 5f6:	0f 91       	pop	r16
 5f8:	ef 90       	pop	r14
 5fa:	08 95       	ret

000005fc <dtoa_prf>:
 5fc:	a9 e0       	ldi	r26, 0x09	; 9
 5fe:	b0 e0       	ldi	r27, 0x00	; 0
 600:	e4 e0       	ldi	r30, 0x04	; 4
 602:	f3 e0       	ldi	r31, 0x03	; 3
 604:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__prologue_saves__+0xc>
 608:	6a 01       	movw	r12, r20
 60a:	12 2f       	mov	r17, r18
 60c:	b0 2e       	mov	r11, r16
 60e:	2b e3       	ldi	r18, 0x3B	; 59
 610:	20 17       	cp	r18, r16
 612:	20 f0       	brcs	.+8      	; 0x61c <dtoa_prf+0x20>
 614:	ff 24       	eor	r15, r15
 616:	f3 94       	inc	r15
 618:	f0 0e       	add	r15, r16
 61a:	02 c0       	rjmp	.+4      	; 0x620 <dtoa_prf+0x24>
 61c:	2c e3       	ldi	r18, 0x3C	; 60
 61e:	f2 2e       	mov	r15, r18
 620:	0f 2d       	mov	r16, r15
 622:	27 e0       	ldi	r18, 0x07	; 7
 624:	ae 01       	movw	r20, r28
 626:	4f 5f       	subi	r20, 0xFF	; 255
 628:	5f 4f       	sbci	r21, 0xFF	; 255
 62a:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__ftoa_engine>
 62e:	bc 01       	movw	r22, r24
 630:	49 81       	ldd	r20, Y+1	; 0x01
 632:	84 2f       	mov	r24, r20
 634:	89 70       	andi	r24, 0x09	; 9
 636:	81 30       	cpi	r24, 0x01	; 1
 638:	31 f0       	breq	.+12     	; 0x646 <dtoa_prf+0x4a>
 63a:	e1 fc       	sbrc	r14, 1
 63c:	06 c0       	rjmp	.+12     	; 0x64a <dtoa_prf+0x4e>
 63e:	e0 fe       	sbrs	r14, 0
 640:	06 c0       	rjmp	.+12     	; 0x64e <dtoa_prf+0x52>
 642:	90 e2       	ldi	r25, 0x20	; 32
 644:	05 c0       	rjmp	.+10     	; 0x650 <dtoa_prf+0x54>
 646:	9d e2       	ldi	r25, 0x2D	; 45
 648:	03 c0       	rjmp	.+6      	; 0x650 <dtoa_prf+0x54>
 64a:	9b e2       	ldi	r25, 0x2B	; 43
 64c:	01 c0       	rjmp	.+2      	; 0x650 <dtoa_prf+0x54>
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	5e 2d       	mov	r21, r14
 652:	50 71       	andi	r21, 0x10	; 16
 654:	43 ff       	sbrs	r20, 3
 656:	3c c0       	rjmp	.+120    	; 0x6d0 <dtoa_prf+0xd4>
 658:	91 11       	cpse	r25, r1
 65a:	02 c0       	rjmp	.+4      	; 0x660 <dtoa_prf+0x64>
 65c:	83 e0       	ldi	r24, 0x03	; 3
 65e:	01 c0       	rjmp	.+2      	; 0x662 <dtoa_prf+0x66>
 660:	84 e0       	ldi	r24, 0x04	; 4
 662:	81 17       	cp	r24, r17
 664:	18 f4       	brcc	.+6      	; 0x66c <dtoa_prf+0x70>
 666:	21 2f       	mov	r18, r17
 668:	28 1b       	sub	r18, r24
 66a:	01 c0       	rjmp	.+2      	; 0x66e <dtoa_prf+0x72>
 66c:	20 e0       	ldi	r18, 0x00	; 0
 66e:	51 11       	cpse	r21, r1
 670:	0b c0       	rjmp	.+22     	; 0x688 <dtoa_prf+0x8c>
 672:	f6 01       	movw	r30, r12
 674:	82 2f       	mov	r24, r18
 676:	30 e2       	ldi	r19, 0x20	; 32
 678:	88 23       	and	r24, r24
 67a:	19 f0       	breq	.+6      	; 0x682 <dtoa_prf+0x86>
 67c:	31 93       	st	Z+, r19
 67e:	81 50       	subi	r24, 0x01	; 1
 680:	fb cf       	rjmp	.-10     	; 0x678 <dtoa_prf+0x7c>
 682:	c2 0e       	add	r12, r18
 684:	d1 1c       	adc	r13, r1
 686:	20 e0       	ldi	r18, 0x00	; 0
 688:	99 23       	and	r25, r25
 68a:	29 f0       	breq	.+10     	; 0x696 <dtoa_prf+0x9a>
 68c:	d6 01       	movw	r26, r12
 68e:	9c 93       	st	X, r25
 690:	f6 01       	movw	r30, r12
 692:	31 96       	adiw	r30, 0x01	; 1
 694:	6f 01       	movw	r12, r30
 696:	c6 01       	movw	r24, r12
 698:	03 96       	adiw	r24, 0x03	; 3
 69a:	e2 fe       	sbrs	r14, 2
 69c:	0a c0       	rjmp	.+20     	; 0x6b2 <dtoa_prf+0xb6>
 69e:	3e e4       	ldi	r19, 0x4E	; 78
 6a0:	d6 01       	movw	r26, r12
 6a2:	3c 93       	st	X, r19
 6a4:	41 e4       	ldi	r20, 0x41	; 65
 6a6:	11 96       	adiw	r26, 0x01	; 1
 6a8:	4c 93       	st	X, r20
 6aa:	11 97       	sbiw	r26, 0x01	; 1
 6ac:	12 96       	adiw	r26, 0x02	; 2
 6ae:	3c 93       	st	X, r19
 6b0:	06 c0       	rjmp	.+12     	; 0x6be <dtoa_prf+0xc2>
 6b2:	3e e6       	ldi	r19, 0x6E	; 110
 6b4:	f6 01       	movw	r30, r12
 6b6:	30 83       	st	Z, r19
 6b8:	41 e6       	ldi	r20, 0x61	; 97
 6ba:	41 83       	std	Z+1, r20	; 0x01
 6bc:	32 83       	std	Z+2, r19	; 0x02
 6be:	fc 01       	movw	r30, r24
 6c0:	32 2f       	mov	r19, r18
 6c2:	40 e2       	ldi	r20, 0x20	; 32
 6c4:	33 23       	and	r19, r19
 6c6:	09 f4       	brne	.+2      	; 0x6ca <dtoa_prf+0xce>
 6c8:	42 c0       	rjmp	.+132    	; 0x74e <dtoa_prf+0x152>
 6ca:	41 93       	st	Z+, r20
 6cc:	31 50       	subi	r19, 0x01	; 1
 6ce:	fa cf       	rjmp	.-12     	; 0x6c4 <dtoa_prf+0xc8>
 6d0:	42 ff       	sbrs	r20, 2
 6d2:	44 c0       	rjmp	.+136    	; 0x75c <dtoa_prf+0x160>
 6d4:	91 11       	cpse	r25, r1
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <dtoa_prf+0xe0>
 6d8:	83 e0       	ldi	r24, 0x03	; 3
 6da:	01 c0       	rjmp	.+2      	; 0x6de <dtoa_prf+0xe2>
 6dc:	84 e0       	ldi	r24, 0x04	; 4
 6de:	81 17       	cp	r24, r17
 6e0:	18 f4       	brcc	.+6      	; 0x6e8 <dtoa_prf+0xec>
 6e2:	21 2f       	mov	r18, r17
 6e4:	28 1b       	sub	r18, r24
 6e6:	01 c0       	rjmp	.+2      	; 0x6ea <dtoa_prf+0xee>
 6e8:	20 e0       	ldi	r18, 0x00	; 0
 6ea:	51 11       	cpse	r21, r1
 6ec:	0b c0       	rjmp	.+22     	; 0x704 <dtoa_prf+0x108>
 6ee:	f6 01       	movw	r30, r12
 6f0:	82 2f       	mov	r24, r18
 6f2:	30 e2       	ldi	r19, 0x20	; 32
 6f4:	88 23       	and	r24, r24
 6f6:	19 f0       	breq	.+6      	; 0x6fe <dtoa_prf+0x102>
 6f8:	31 93       	st	Z+, r19
 6fa:	81 50       	subi	r24, 0x01	; 1
 6fc:	fb cf       	rjmp	.-10     	; 0x6f4 <dtoa_prf+0xf8>
 6fe:	c2 0e       	add	r12, r18
 700:	d1 1c       	adc	r13, r1
 702:	20 e0       	ldi	r18, 0x00	; 0
 704:	99 23       	and	r25, r25
 706:	29 f0       	breq	.+10     	; 0x712 <dtoa_prf+0x116>
 708:	d6 01       	movw	r26, r12
 70a:	9c 93       	st	X, r25
 70c:	f6 01       	movw	r30, r12
 70e:	31 96       	adiw	r30, 0x01	; 1
 710:	6f 01       	movw	r12, r30
 712:	c6 01       	movw	r24, r12
 714:	03 96       	adiw	r24, 0x03	; 3
 716:	e2 fe       	sbrs	r14, 2
 718:	0b c0       	rjmp	.+22     	; 0x730 <dtoa_prf+0x134>
 71a:	39 e4       	ldi	r19, 0x49	; 73
 71c:	d6 01       	movw	r26, r12
 71e:	3c 93       	st	X, r19
 720:	3e e4       	ldi	r19, 0x4E	; 78
 722:	11 96       	adiw	r26, 0x01	; 1
 724:	3c 93       	st	X, r19
 726:	11 97       	sbiw	r26, 0x01	; 1
 728:	36 e4       	ldi	r19, 0x46	; 70
 72a:	12 96       	adiw	r26, 0x02	; 2
 72c:	3c 93       	st	X, r19
 72e:	07 c0       	rjmp	.+14     	; 0x73e <dtoa_prf+0x142>
 730:	39 e6       	ldi	r19, 0x69	; 105
 732:	f6 01       	movw	r30, r12
 734:	30 83       	st	Z, r19
 736:	3e e6       	ldi	r19, 0x6E	; 110
 738:	31 83       	std	Z+1, r19	; 0x01
 73a:	36 e6       	ldi	r19, 0x66	; 102
 73c:	32 83       	std	Z+2, r19	; 0x02
 73e:	fc 01       	movw	r30, r24
 740:	32 2f       	mov	r19, r18
 742:	40 e2       	ldi	r20, 0x20	; 32
 744:	33 23       	and	r19, r19
 746:	19 f0       	breq	.+6      	; 0x74e <dtoa_prf+0x152>
 748:	41 93       	st	Z+, r20
 74a:	31 50       	subi	r19, 0x01	; 1
 74c:	fb cf       	rjmp	.-10     	; 0x744 <dtoa_prf+0x148>
 74e:	fc 01       	movw	r30, r24
 750:	e2 0f       	add	r30, r18
 752:	f1 1d       	adc	r31, r1
 754:	10 82       	st	Z, r1
 756:	8e ef       	ldi	r24, 0xFE	; 254
 758:	9f ef       	ldi	r25, 0xFF	; 255
 75a:	a6 c0       	rjmp	.+332    	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 75c:	21 e0       	ldi	r18, 0x01	; 1
 75e:	30 e0       	ldi	r19, 0x00	; 0
 760:	91 11       	cpse	r25, r1
 762:	02 c0       	rjmp	.+4      	; 0x768 <dtoa_prf+0x16c>
 764:	20 e0       	ldi	r18, 0x00	; 0
 766:	30 e0       	ldi	r19, 0x00	; 0
 768:	16 16       	cp	r1, r22
 76a:	17 06       	cpc	r1, r23
 76c:	1c f4       	brge	.+6      	; 0x774 <dtoa_prf+0x178>
 76e:	fb 01       	movw	r30, r22
 770:	31 96       	adiw	r30, 0x01	; 1
 772:	02 c0       	rjmp	.+4      	; 0x778 <dtoa_prf+0x17c>
 774:	e1 e0       	ldi	r30, 0x01	; 1
 776:	f0 e0       	ldi	r31, 0x00	; 0
 778:	2e 0f       	add	r18, r30
 77a:	3f 1f       	adc	r19, r31
 77c:	bb 20       	and	r11, r11
 77e:	21 f0       	breq	.+8      	; 0x788 <dtoa_prf+0x18c>
 780:	eb 2d       	mov	r30, r11
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	31 96       	adiw	r30, 0x01	; 1
 786:	02 c0       	rjmp	.+4      	; 0x78c <dtoa_prf+0x190>
 788:	e0 e0       	ldi	r30, 0x00	; 0
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	2e 0f       	add	r18, r30
 78e:	3f 1f       	adc	r19, r31
 790:	e1 2f       	mov	r30, r17
 792:	f0 e0       	ldi	r31, 0x00	; 0
 794:	2e 17       	cp	r18, r30
 796:	3f 07       	cpc	r19, r31
 798:	1c f4       	brge	.+6      	; 0x7a0 <dtoa_prf+0x1a4>
 79a:	12 1b       	sub	r17, r18
 79c:	21 2f       	mov	r18, r17
 79e:	01 c0       	rjmp	.+2      	; 0x7a2 <dtoa_prf+0x1a6>
 7a0:	20 e0       	ldi	r18, 0x00	; 0
 7a2:	8e 2d       	mov	r24, r14
 7a4:	88 71       	andi	r24, 0x18	; 24
 7a6:	59 f4       	brne	.+22     	; 0x7be <dtoa_prf+0x1c2>
 7a8:	f6 01       	movw	r30, r12
 7aa:	82 2f       	mov	r24, r18
 7ac:	30 e2       	ldi	r19, 0x20	; 32
 7ae:	88 23       	and	r24, r24
 7b0:	19 f0       	breq	.+6      	; 0x7b8 <dtoa_prf+0x1bc>
 7b2:	31 93       	st	Z+, r19
 7b4:	81 50       	subi	r24, 0x01	; 1
 7b6:	fb cf       	rjmp	.-10     	; 0x7ae <dtoa_prf+0x1b2>
 7b8:	c2 0e       	add	r12, r18
 7ba:	d1 1c       	adc	r13, r1
 7bc:	20 e0       	ldi	r18, 0x00	; 0
 7be:	99 23       	and	r25, r25
 7c0:	29 f0       	breq	.+10     	; 0x7cc <dtoa_prf+0x1d0>
 7c2:	d6 01       	movw	r26, r12
 7c4:	9c 93       	st	X, r25
 7c6:	f6 01       	movw	r30, r12
 7c8:	31 96       	adiw	r30, 0x01	; 1
 7ca:	6f 01       	movw	r12, r30
 7cc:	51 11       	cpse	r21, r1
 7ce:	0b c0       	rjmp	.+22     	; 0x7e6 <dtoa_prf+0x1ea>
 7d0:	f6 01       	movw	r30, r12
 7d2:	82 2f       	mov	r24, r18
 7d4:	90 e3       	ldi	r25, 0x30	; 48
 7d6:	88 23       	and	r24, r24
 7d8:	19 f0       	breq	.+6      	; 0x7e0 <dtoa_prf+0x1e4>
 7da:	91 93       	st	Z+, r25
 7dc:	81 50       	subi	r24, 0x01	; 1
 7de:	fb cf       	rjmp	.-10     	; 0x7d6 <dtoa_prf+0x1da>
 7e0:	c2 0e       	add	r12, r18
 7e2:	d1 1c       	adc	r13, r1
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	0f 2d       	mov	r16, r15
 7e8:	06 0f       	add	r16, r22
 7ea:	9a 81       	ldd	r25, Y+2	; 0x02
 7ec:	34 2f       	mov	r19, r20
 7ee:	30 71       	andi	r19, 0x10	; 16
 7f0:	44 ff       	sbrs	r20, 4
 7f2:	03 c0       	rjmp	.+6      	; 0x7fa <dtoa_prf+0x1fe>
 7f4:	91 33       	cpi	r25, 0x31	; 49
 7f6:	09 f4       	brne	.+2      	; 0x7fa <dtoa_prf+0x1fe>
 7f8:	01 50       	subi	r16, 0x01	; 1
 7fa:	10 16       	cp	r1, r16
 7fc:	24 f4       	brge	.+8      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fe:	09 30       	cpi	r16, 0x09	; 9
 800:	18 f0       	brcs	.+6      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 802:	08 e0       	ldi	r16, 0x08	; 8
 804:	01 c0       	rjmp	.+2      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 806:	01 e0       	ldi	r16, 0x01	; 1
 808:	ab 01       	movw	r20, r22
 80a:	77 ff       	sbrs	r23, 7
 80c:	02 c0       	rjmp	.+4      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 80e:	40 e0       	ldi	r20, 0x00	; 0
 810:	50 e0       	ldi	r21, 0x00	; 0
 812:	fb 01       	movw	r30, r22
 814:	e4 1b       	sub	r30, r20
 816:	f5 0b       	sbc	r31, r21
 818:	a1 e0       	ldi	r26, 0x01	; 1
 81a:	b0 e0       	ldi	r27, 0x00	; 0
 81c:	ac 0f       	add	r26, r28
 81e:	bd 1f       	adc	r27, r29
 820:	ea 0f       	add	r30, r26
 822:	fb 1f       	adc	r31, r27
 824:	8e e2       	ldi	r24, 0x2E	; 46
 826:	a8 2e       	mov	r10, r24
 828:	4b 01       	movw	r8, r22
 82a:	80 1a       	sub	r8, r16
 82c:	91 08       	sbc	r9, r1
 82e:	0b 2d       	mov	r16, r11
 830:	10 e0       	ldi	r17, 0x00	; 0
 832:	11 95       	neg	r17
 834:	01 95       	neg	r16
 836:	11 09       	sbc	r17, r1
 838:	4f 3f       	cpi	r20, 0xFF	; 255
 83a:	bf ef       	ldi	r27, 0xFF	; 255
 83c:	5b 07       	cpc	r21, r27
 83e:	21 f4       	brne	.+8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 840:	d6 01       	movw	r26, r12
 842:	ac 92       	st	X, r10
 844:	11 96       	adiw	r26, 0x01	; 1
 846:	6d 01       	movw	r12, r26
 848:	64 17       	cp	r22, r20
 84a:	75 07       	cpc	r23, r21
 84c:	2c f0       	brlt	.+10     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 84e:	84 16       	cp	r8, r20
 850:	95 06       	cpc	r9, r21
 852:	14 f4       	brge	.+4      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 854:	81 81       	ldd	r24, Z+1	; 0x01
 856:	01 c0       	rjmp	.+2      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 858:	80 e3       	ldi	r24, 0x30	; 48
 85a:	41 50       	subi	r20, 0x01	; 1
 85c:	51 09       	sbc	r21, r1
 85e:	31 96       	adiw	r30, 0x01	; 1
 860:	d6 01       	movw	r26, r12
 862:	11 96       	adiw	r26, 0x01	; 1
 864:	7d 01       	movw	r14, r26
 866:	40 17       	cp	r20, r16
 868:	51 07       	cpc	r21, r17
 86a:	24 f0       	brlt	.+8      	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 86c:	d6 01       	movw	r26, r12
 86e:	8c 93       	st	X, r24
 870:	67 01       	movw	r12, r14
 872:	e2 cf       	rjmp	.-60     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 874:	64 17       	cp	r22, r20
 876:	75 07       	cpc	r23, r21
 878:	39 f4       	brne	.+14     	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 87a:	96 33       	cpi	r25, 0x36	; 54
 87c:	20 f4       	brcc	.+8      	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 87e:	95 33       	cpi	r25, 0x35	; 53
 880:	19 f4       	brne	.+6      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 882:	31 11       	cpse	r19, r1
 884:	01 c0       	rjmp	.+2      	; 0x888 <__DATA_REGION_LENGTH__+0x88>
 886:	81 e3       	ldi	r24, 0x31	; 49
 888:	f6 01       	movw	r30, r12
 88a:	80 83       	st	Z, r24
 88c:	f7 01       	movw	r30, r14
 88e:	82 2f       	mov	r24, r18
 890:	90 e2       	ldi	r25, 0x20	; 32
 892:	88 23       	and	r24, r24
 894:	19 f0       	breq	.+6      	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 896:	91 93       	st	Z+, r25
 898:	81 50       	subi	r24, 0x01	; 1
 89a:	fb cf       	rjmp	.-10     	; 0x892 <__DATA_REGION_LENGTH__+0x92>
 89c:	f7 01       	movw	r30, r14
 89e:	e2 0f       	add	r30, r18
 8a0:	f1 1d       	adc	r31, r1
 8a2:	10 82       	st	Z, r1
 8a4:	80 e0       	ldi	r24, 0x00	; 0
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	29 96       	adiw	r28, 0x09	; 9
 8aa:	ec e0       	ldi	r30, 0x0C	; 12
 8ac:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__epilogue_restores__+0xc>

000008b0 <__ftoa_engine>:
 8b0:	28 30       	cpi	r18, 0x08	; 8
 8b2:	08 f0       	brcs	.+2      	; 0x8b6 <__ftoa_engine+0x6>
 8b4:	27 e0       	ldi	r18, 0x07	; 7
 8b6:	33 27       	eor	r19, r19
 8b8:	da 01       	movw	r26, r20
 8ba:	99 0f       	add	r25, r25
 8bc:	31 1d       	adc	r19, r1
 8be:	87 fd       	sbrc	r24, 7
 8c0:	91 60       	ori	r25, 0x01	; 1
 8c2:	00 96       	adiw	r24, 0x00	; 0
 8c4:	61 05       	cpc	r22, r1
 8c6:	71 05       	cpc	r23, r1
 8c8:	39 f4       	brne	.+14     	; 0x8d8 <__ftoa_engine+0x28>
 8ca:	32 60       	ori	r19, 0x02	; 2
 8cc:	2e 5f       	subi	r18, 0xFE	; 254
 8ce:	3d 93       	st	X+, r19
 8d0:	30 e3       	ldi	r19, 0x30	; 48
 8d2:	2a 95       	dec	r18
 8d4:	e1 f7       	brne	.-8      	; 0x8ce <__ftoa_engine+0x1e>
 8d6:	08 95       	ret
 8d8:	9f 3f       	cpi	r25, 0xFF	; 255
 8da:	30 f0       	brcs	.+12     	; 0x8e8 <__ftoa_engine+0x38>
 8dc:	80 38       	cpi	r24, 0x80	; 128
 8de:	71 05       	cpc	r23, r1
 8e0:	61 05       	cpc	r22, r1
 8e2:	09 f0       	breq	.+2      	; 0x8e6 <__ftoa_engine+0x36>
 8e4:	3c 5f       	subi	r19, 0xFC	; 252
 8e6:	3c 5f       	subi	r19, 0xFC	; 252
 8e8:	3d 93       	st	X+, r19
 8ea:	91 30       	cpi	r25, 0x01	; 1
 8ec:	08 f0       	brcs	.+2      	; 0x8f0 <__ftoa_engine+0x40>
 8ee:	80 68       	ori	r24, 0x80	; 128
 8f0:	91 1d       	adc	r25, r1
 8f2:	df 93       	push	r29
 8f4:	cf 93       	push	r28
 8f6:	1f 93       	push	r17
 8f8:	0f 93       	push	r16
 8fa:	ff 92       	push	r15
 8fc:	ef 92       	push	r14
 8fe:	19 2f       	mov	r17, r25
 900:	98 7f       	andi	r25, 0xF8	; 248
 902:	96 95       	lsr	r25
 904:	e9 2f       	mov	r30, r25
 906:	96 95       	lsr	r25
 908:	96 95       	lsr	r25
 90a:	e9 0f       	add	r30, r25
 90c:	ff 27       	eor	r31, r31
 90e:	ee 53       	subi	r30, 0x3E	; 62
 910:	ff 4f       	sbci	r31, 0xFF	; 255
 912:	99 27       	eor	r25, r25
 914:	33 27       	eor	r19, r19
 916:	ee 24       	eor	r14, r14
 918:	ff 24       	eor	r15, r15
 91a:	a7 01       	movw	r20, r14
 91c:	e7 01       	movw	r28, r14
 91e:	05 90       	lpm	r0, Z+
 920:	08 94       	sec
 922:	07 94       	ror	r0
 924:	28 f4       	brcc	.+10     	; 0x930 <__stack+0x31>
 926:	36 0f       	add	r19, r22
 928:	e7 1e       	adc	r14, r23
 92a:	f8 1e       	adc	r15, r24
 92c:	49 1f       	adc	r20, r25
 92e:	51 1d       	adc	r21, r1
 930:	66 0f       	add	r22, r22
 932:	77 1f       	adc	r23, r23
 934:	88 1f       	adc	r24, r24
 936:	99 1f       	adc	r25, r25
 938:	06 94       	lsr	r0
 93a:	a1 f7       	brne	.-24     	; 0x924 <__stack+0x25>
 93c:	05 90       	lpm	r0, Z+
 93e:	07 94       	ror	r0
 940:	28 f4       	brcc	.+10     	; 0x94c <__stack+0x4d>
 942:	e7 0e       	add	r14, r23
 944:	f8 1e       	adc	r15, r24
 946:	49 1f       	adc	r20, r25
 948:	56 1f       	adc	r21, r22
 94a:	c1 1d       	adc	r28, r1
 94c:	77 0f       	add	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	99 1f       	adc	r25, r25
 952:	66 1f       	adc	r22, r22
 954:	06 94       	lsr	r0
 956:	a1 f7       	brne	.-24     	; 0x940 <__stack+0x41>
 958:	05 90       	lpm	r0, Z+
 95a:	07 94       	ror	r0
 95c:	28 f4       	brcc	.+10     	; 0x968 <__stack+0x69>
 95e:	f8 0e       	add	r15, r24
 960:	49 1f       	adc	r20, r25
 962:	56 1f       	adc	r21, r22
 964:	c7 1f       	adc	r28, r23
 966:	d1 1d       	adc	r29, r1
 968:	88 0f       	add	r24, r24
 96a:	99 1f       	adc	r25, r25
 96c:	66 1f       	adc	r22, r22
 96e:	77 1f       	adc	r23, r23
 970:	06 94       	lsr	r0
 972:	a1 f7       	brne	.-24     	; 0x95c <__stack+0x5d>
 974:	05 90       	lpm	r0, Z+
 976:	07 94       	ror	r0
 978:	20 f4       	brcc	.+8      	; 0x982 <__stack+0x83>
 97a:	49 0f       	add	r20, r25
 97c:	56 1f       	adc	r21, r22
 97e:	c7 1f       	adc	r28, r23
 980:	d8 1f       	adc	r29, r24
 982:	99 0f       	add	r25, r25
 984:	66 1f       	adc	r22, r22
 986:	77 1f       	adc	r23, r23
 988:	88 1f       	adc	r24, r24
 98a:	06 94       	lsr	r0
 98c:	a9 f7       	brne	.-22     	; 0x978 <__stack+0x79>
 98e:	84 91       	lpm	r24, Z
 990:	10 95       	com	r17
 992:	17 70       	andi	r17, 0x07	; 7
 994:	41 f0       	breq	.+16     	; 0x9a6 <__stack+0xa7>
 996:	d6 95       	lsr	r29
 998:	c7 95       	ror	r28
 99a:	57 95       	ror	r21
 99c:	47 95       	ror	r20
 99e:	f7 94       	ror	r15
 9a0:	e7 94       	ror	r14
 9a2:	1a 95       	dec	r17
 9a4:	c1 f7       	brne	.-16     	; 0x996 <__stack+0x97>
 9a6:	e8 e6       	ldi	r30, 0x68	; 104
 9a8:	f0 e0       	ldi	r31, 0x00	; 0
 9aa:	68 94       	set
 9ac:	15 90       	lpm	r1, Z+
 9ae:	15 91       	lpm	r17, Z+
 9b0:	35 91       	lpm	r19, Z+
 9b2:	65 91       	lpm	r22, Z+
 9b4:	95 91       	lpm	r25, Z+
 9b6:	05 90       	lpm	r0, Z+
 9b8:	7f e2       	ldi	r23, 0x2F	; 47
 9ba:	73 95       	inc	r23
 9bc:	e1 18       	sub	r14, r1
 9be:	f1 0a       	sbc	r15, r17
 9c0:	43 0b       	sbc	r20, r19
 9c2:	56 0b       	sbc	r21, r22
 9c4:	c9 0b       	sbc	r28, r25
 9c6:	d0 09       	sbc	r29, r0
 9c8:	c0 f7       	brcc	.-16     	; 0x9ba <__stack+0xbb>
 9ca:	e1 0c       	add	r14, r1
 9cc:	f1 1e       	adc	r15, r17
 9ce:	43 1f       	adc	r20, r19
 9d0:	56 1f       	adc	r21, r22
 9d2:	c9 1f       	adc	r28, r25
 9d4:	d0 1d       	adc	r29, r0
 9d6:	7e f4       	brtc	.+30     	; 0x9f6 <__stack+0xf7>
 9d8:	70 33       	cpi	r23, 0x30	; 48
 9da:	11 f4       	brne	.+4      	; 0x9e0 <__stack+0xe1>
 9dc:	8a 95       	dec	r24
 9de:	e6 cf       	rjmp	.-52     	; 0x9ac <__stack+0xad>
 9e0:	e8 94       	clt
 9e2:	01 50       	subi	r16, 0x01	; 1
 9e4:	30 f0       	brcs	.+12     	; 0x9f2 <__stack+0xf3>
 9e6:	08 0f       	add	r16, r24
 9e8:	0a f4       	brpl	.+2      	; 0x9ec <__stack+0xed>
 9ea:	00 27       	eor	r16, r16
 9ec:	02 17       	cp	r16, r18
 9ee:	08 f4       	brcc	.+2      	; 0x9f2 <__stack+0xf3>
 9f0:	20 2f       	mov	r18, r16
 9f2:	23 95       	inc	r18
 9f4:	02 2f       	mov	r16, r18
 9f6:	7a 33       	cpi	r23, 0x3A	; 58
 9f8:	28 f0       	brcs	.+10     	; 0xa04 <__stack+0x105>
 9fa:	79 e3       	ldi	r23, 0x39	; 57
 9fc:	7d 93       	st	X+, r23
 9fe:	2a 95       	dec	r18
 a00:	e9 f7       	brne	.-6      	; 0x9fc <__stack+0xfd>
 a02:	10 c0       	rjmp	.+32     	; 0xa24 <__stack+0x125>
 a04:	7d 93       	st	X+, r23
 a06:	2a 95       	dec	r18
 a08:	89 f6       	brne	.-94     	; 0x9ac <__stack+0xad>
 a0a:	06 94       	lsr	r0
 a0c:	97 95       	ror	r25
 a0e:	67 95       	ror	r22
 a10:	37 95       	ror	r19
 a12:	17 95       	ror	r17
 a14:	17 94       	ror	r1
 a16:	e1 18       	sub	r14, r1
 a18:	f1 0a       	sbc	r15, r17
 a1a:	43 0b       	sbc	r20, r19
 a1c:	56 0b       	sbc	r21, r22
 a1e:	c9 0b       	sbc	r28, r25
 a20:	d0 09       	sbc	r29, r0
 a22:	98 f0       	brcs	.+38     	; 0xa4a <__stack+0x14b>
 a24:	23 95       	inc	r18
 a26:	7e 91       	ld	r23, -X
 a28:	73 95       	inc	r23
 a2a:	7a 33       	cpi	r23, 0x3A	; 58
 a2c:	08 f0       	brcs	.+2      	; 0xa30 <__stack+0x131>
 a2e:	70 e3       	ldi	r23, 0x30	; 48
 a30:	7c 93       	st	X, r23
 a32:	20 13       	cpse	r18, r16
 a34:	b8 f7       	brcc	.-18     	; 0xa24 <__stack+0x125>
 a36:	7e 91       	ld	r23, -X
 a38:	70 61       	ori	r23, 0x10	; 16
 a3a:	7d 93       	st	X+, r23
 a3c:	30 f0       	brcs	.+12     	; 0xa4a <__stack+0x14b>
 a3e:	83 95       	inc	r24
 a40:	71 e3       	ldi	r23, 0x31	; 49
 a42:	7d 93       	st	X+, r23
 a44:	70 e3       	ldi	r23, 0x30	; 48
 a46:	2a 95       	dec	r18
 a48:	e1 f7       	brne	.-8      	; 0xa42 <__stack+0x143>
 a4a:	11 24       	eor	r1, r1
 a4c:	ef 90       	pop	r14
 a4e:	ff 90       	pop	r15
 a50:	0f 91       	pop	r16
 a52:	1f 91       	pop	r17
 a54:	cf 91       	pop	r28
 a56:	df 91       	pop	r29
 a58:	99 27       	eor	r25, r25
 a5a:	87 fd       	sbrc	r24, 7
 a5c:	90 95       	com	r25
 a5e:	08 95       	ret

00000a60 <__prologue_saves__>:
 a60:	2f 92       	push	r2
 a62:	3f 92       	push	r3
 a64:	4f 92       	push	r4
 a66:	5f 92       	push	r5
 a68:	6f 92       	push	r6
 a6a:	7f 92       	push	r7
 a6c:	8f 92       	push	r8
 a6e:	9f 92       	push	r9
 a70:	af 92       	push	r10
 a72:	bf 92       	push	r11
 a74:	cf 92       	push	r12
 a76:	df 92       	push	r13
 a78:	ef 92       	push	r14
 a7a:	ff 92       	push	r15
 a7c:	0f 93       	push	r16
 a7e:	1f 93       	push	r17
 a80:	cf 93       	push	r28
 a82:	df 93       	push	r29
 a84:	cd b7       	in	r28, 0x3d	; 61
 a86:	de b7       	in	r29, 0x3e	; 62
 a88:	ca 1b       	sub	r28, r26
 a8a:	db 0b       	sbc	r29, r27
 a8c:	0f b6       	in	r0, 0x3f	; 63
 a8e:	f8 94       	cli
 a90:	de bf       	out	0x3e, r29	; 62
 a92:	0f be       	out	0x3f, r0	; 63
 a94:	cd bf       	out	0x3d, r28	; 61
 a96:	09 94       	ijmp

00000a98 <__epilogue_restores__>:
 a98:	2a 88       	ldd	r2, Y+18	; 0x12
 a9a:	39 88       	ldd	r3, Y+17	; 0x11
 a9c:	48 88       	ldd	r4, Y+16	; 0x10
 a9e:	5f 84       	ldd	r5, Y+15	; 0x0f
 aa0:	6e 84       	ldd	r6, Y+14	; 0x0e
 aa2:	7d 84       	ldd	r7, Y+13	; 0x0d
 aa4:	8c 84       	ldd	r8, Y+12	; 0x0c
 aa6:	9b 84       	ldd	r9, Y+11	; 0x0b
 aa8:	aa 84       	ldd	r10, Y+10	; 0x0a
 aaa:	b9 84       	ldd	r11, Y+9	; 0x09
 aac:	c8 84       	ldd	r12, Y+8	; 0x08
 aae:	df 80       	ldd	r13, Y+7	; 0x07
 ab0:	ee 80       	ldd	r14, Y+6	; 0x06
 ab2:	fd 80       	ldd	r15, Y+5	; 0x05
 ab4:	0c 81       	ldd	r16, Y+4	; 0x04
 ab6:	1b 81       	ldd	r17, Y+3	; 0x03
 ab8:	aa 81       	ldd	r26, Y+2	; 0x02
 aba:	b9 81       	ldd	r27, Y+1	; 0x01
 abc:	ce 0f       	add	r28, r30
 abe:	d1 1d       	adc	r29, r1
 ac0:	0f b6       	in	r0, 0x3f	; 63
 ac2:	f8 94       	cli
 ac4:	de bf       	out	0x3e, r29	; 62
 ac6:	0f be       	out	0x3f, r0	; 63
 ac8:	cd bf       	out	0x3d, r28	; 61
 aca:	ed 01       	movw	r28, r26
 acc:	08 95       	ret

00000ace <_exit>:
 ace:	f8 94       	cli

00000ad0 <__stop_program>:
 ad0:	ff cf       	rjmp	.-2      	; 0xad0 <__stop_program>
